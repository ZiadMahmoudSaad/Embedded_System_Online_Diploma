/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include "platform_types.h"

/* RCC */
#define RCC_BASE 		0x40021000
#define RCC_APB2ENR		*((vuint32_t*)(RCC_BASE+0X18))

/* GPIO */
/* GPIOA */
#define GPIO_PA_BASE 	0x40010800
#define GPIOA_CRH		*((vuint32_t*)(GPIO_PA_BASE+0X04))
#define GPIOA_CRL		*((vuint32_t*)(GPIO_PA_BASE+0X00))
#define GPIOA_ODR		*((vuint32_t*)(GPIO_PA_BASE+0X0C))
#define GPIOA_IDR		*((vuint32_t*)(GPIO_PA_BASE+0X08))

/* GPIOB */
#define GPIO_PB_BASE 	0x40010C00
#define GPIOB_CRH		*((vuint32_t*)(GPIO_PB_BASE+0X04))
#define GPIOB_CRL		*((vuint32_t*)(GPIO_PB_BASE+0X00))
#define GPIOB_ODR		*((vuint32_t*)(GPIO_PB_BASE+0X0C))
#define GPIOB_IDR		*((vuint32_t*)(GPIO_PB_BASE+0X08))

void cloack_init()
{
	/* clock enable for GPIOA */
	RCC_APB2ENR |=	1<<2 ;
	/* clock enable for GPIOB */
	RCC_APB2ENR |=	1<<3 ;
}

void GPIO_init()
{
	//GPIOA_CRL = 0x0;
	//GPIOA_CRH = 0x0;

	//GPIOA_Pin_1  input high_Z (Floating input)
	//PIN_MODE
	GPIOA_CRL	&= ~(0b11<<4) ;
	//INPUT/OUTPUT_MODE
	GPIOA_CRL	|= 0b01<<6 ;

	//GPIOB_Pin_1  output push pull mode
	//PIN_MODE
	GPIOB_CRL	|= 0b01<<4 ;
	//INPUT/OUTPUT_MODE
	GPIOB_CRL	&= ~(0b11<<6) ;

	//GPIOA_Pin_13 input high_Z (Floating input)
	//PIN_MODE
	GPIOA_CRH	&= ~(0b11<<20) ;
	//INPUT/OUTPUT_MODE
	GPIOA_CRH	|= 0b01<<22;

	//GPIOB_Pin_13 output push pull mode
	//PIN_MODE
	GPIOB_CRH	|= 0b01<<20;
	//INPUT/OUTPUT_MODE
	GPIOB_CRH	&= ~(0b11<<22) ;
}

void wait(uint32_t time);

int main(void)
{
	cloack_init();
	GPIO_init();


	while(1)
	{
		while((GPIOA_IDR&(1<<1))>>1==0)
		{
			GPIOB_ODR ^= 1<<1 ;
			while((GPIOA_IDR&(1<<1))>>1==0);
		}
		if((GPIOA_IDR&(1<<13))>>13==1)
		{
			GPIOB_ODR ^= 1<<13 ;
		}
		wait(1);
	}
}

void wait(uint32_t time)
{
	uint32_t i,j;
	for(i=0;i<time;i++)
		for(j=0;j<255;j++);
}
